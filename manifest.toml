#:schema https://raw.githubusercontent.com/YunoHost/apps/master/schemas/manifest.v2.schema.json

packaging_format = 2

id = "lubelogger"
name = "LubeLogger"

description.en = "Vehicle Maintenance Records and Fuel Mileage Tracker"
description.fr = "Dossiers d&#39;entretien des vÃ©hicules et suivi de la consommation de carburant"

version = "1.0~ynh1"

maintainers = ["hazzamyman"]

[upstream]
license = "MIT"
website = "https://lubelogger.com/"
demo = "https://demo.lubelogger.com/"
admindoc = "https://docs.lubelogger.com/"
userdoc = "https://docs.lubelogger.com/"
code = "https://github.com/hargata/lubelog"

[integration]
yunohost = '>= 11.2'
# List of supported archs using the dpkg --print-architecture nomenclature (amd64/i386/armhf/arm64), for example: ["amd64", "i386']
architectures = "all" # TODO : handle the "all" option (no ["all"])
multi_instance = true
ldap = "not_relevant" # TODO : fixme, use actual booleans + handle the "not_relevant" value
sso = "not_relevant"
# FIXME: replace with an **estimate** minimum disk and RAM requirements. e.g. 20M, 400M, 1G... You may have have a look at CI results
disk = "50M"
ram.build = "50M"
ram.runtime = "50M"

[install]

    [install.domain]
    # this is a generic question - ask strings are automatically handled by YunoHost's core
    type = "domain"

    [install.init_main_permission]
    # this is a generic question - ask strings are automatically handled by YunoHost's core
    # This won't be saved as setting and will instead be used to initialize the SSOwat permission
    type = "group"
    default = "visitors"

[resources]
    # See the packaging documentation for the full set
    # of explanation regarding the behavior and properties for each of those
    # https://yunohost.org/packaging_apps_resources

    [resources.sources]

        [resources.sources.main]
        # This will pre-fetch the asset which can then be deployed during the install/upgrade scripts with :
        #    ynh_setup_source --dest_dir="$install_dir"
        # You can also define other assets than "main" and add --source_id="foobar" in the previous command
        url = "https://github.com/hargata/lubelog/archive/refs/tags/v1.3.0.tar.gz"
        sha256 = "a0ec6a1e0a21ca5b9ff66489ad36cba84a5825f77a3827b21db28a46f0bfbe45"

        # These infos are used by https://github.com/YunoHost/apps/blob/master/tools/autoupdate_app_sources/autoupdate_app_sources.py
        # to auto-update the previous asset urls and sha256sum + manifest version
        # assuming the upstream's code repo is on github and relies on tags or releases
        # See the 'sources' resource documentation for more details

        autoupdate.strategy = "latest_github_tag"

    [resources.system_user]
    # This will provision/deprovision a unix system user

    [resources.install_dir]
    # This will create/remove the install dir as /var/www/$app
    # and store the corresponding setting $install_dir

    [resources.data_dir]
    # This will create/remove the data dir as /home/yunohost.app/$app
    # and store the corresponding setting $data_dir

    [resources.permissions]
    # This will configure SSOwat permission for $domain/$path/
    # The initial allowed group of user is configured via the init_main_permission question (public=visitors, private=all_users)
    main.url = "/"

    [resources.ports]
    # This will pick a random port for reverse-proxying and store it as the $port setting

    [resources.apt]
    packages = ["docker"]
